{
	"info": {
		"_postman_id": "7d09007a-4cc2-457f-b1ec-de0dddd5abb9",
		"name": "Musician Tests",
		"description": "Colección de pruebas sobre el recurso Musician",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear un músico",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_m\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Rubén Blades Bellido de Luna\",\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Ruben_Blades_by_Gage_Skidmore.jpg/800px-Ruben_Blades_by_Gage_Skidmore.jpg\",\n    \"description\": \"Es un cantante, compositor, músico, actor, abogado, político y activista panameño. Ha desarrollado gran parte de su carrera artística en la ciudad de Nueva York.\",\n    \"birthDate\": \"1948-07-16T00:00:00-05:00\"\n}"
				},
				"url": {
					"raw": "{{protocol}}://{{ip}}/musicians",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"path": [
						"musicians"
					]
				},
				"description": "Crea un nuevo músico. El Id es inicializado por la BD y se debe ver en la respuesta.\r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**\r\n\r\n**JSON de salida**\r\n\r\n```\r\n{\r\n    \"name\": \"Rubén Blades Bellido de Luna\",\r\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Ruben_Blades_by_Gage_Skidmore.jpg/800px-Ruben_Blades_by_Gage_Skidmore.jpg\",\r\n    \"description\": \"Es un cantante, compositor, músico, actor, abogado, político y activista panameño. Ha desarrollado gran parte de su carrera artística en la ciudad de Nueva York.\",\r\n    \"birthDate\": \"1948-07-16T00:00:00-05:00\",\r\n    \"id\": 13\r\n}\r\n```"
			},
			"response": []
		},
		{
			"name": "Crear un músico 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_m2\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"name\": \"Joan Manuel Serrat Teresa\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/e/e3/Serrat.jpg\",\n        \"description\": \"Es un cantautor, compositor, actor, escritor, poeta y músico español.\",\n        \"birthDate\": \"1943-12-27T00:00:00-05:00\"\n    }"
				},
				"url": {
					"raw": "{{protocol}}://{{ip}}/musicians",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"path": [
						"musicians"
					]
				},
				"description": "Crea un nuevo músico. El Id es inicializado por la BD y se debe ver en la respuesta.\r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**\r\n\r\n**JSON de salida**\r\n\r\n```\r\n{\r\n    \"name\": \"Joan Manuel Serrat Teresa\",\r\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/e/e3/Serrat.jpg\",\r\n    \"description\": \"Es un cantautor, compositor, actor, escritor, poeta y músico español.\",\r\n    \"birthDate\": \"1943-12-27T00:00:00-05:00\",\r\n    \"id\": 14\r\n}\r\n```"
			},
			"response": []
		},
		{
			"name": "Obtener todos los músicos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"No genera error en el Gell All\"] = responseCode.code === 200;",
							"tests[\"musicians count\"] = data.length >= 1;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{ip}}/musicians",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"path": [
						"musicians"
					]
				},
				"description": "Consulta todos los músicos de la aplicacion. \r\n\r\nLa petición no tiene cuerpo.\r\n\r\nPara la prueba, se verifica que el conjunto de músicos en la respuesta tenga mas de uno.\r\n\r\n**Código http esperado: 200**\r\n\r\n**Ejemplo de respuesta**\r\n\r\n```\r\n[\r\n    {\r\n        \"id\": 2,\r\n        \"name\": \"Joan Manuel Serrat Teresa\",\r\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/e/e3/Serrat.jpg\",\r\n        \"description\": \"Es un cantautor, compositor, actor, escritor, poeta y músico español.\",\r\n        \"birthDate\": \"1943-12-27T05:00:00.000Z\",\r\n        \"albums\": [],\r\n        \"performerPrizes\": []\r\n    },\r\n    {\r\n        \"id\": 1,\r\n        \"name\": \"Rubén Blades Bellido de Luna\",\r\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Ruben_Blades_by_Gage_Skidmore.jpg/800px-Ruben_Blades_by_Gage_Skidmore.jpg\",\r\n        \"description\": \"Es un cantante, compositor, músico, actor, abogado, político y activista panameño. Ha desarrollado gran parte de su carrera artística en la ciudad de Nueva York.\",\r\n        \"birthDate\": \"1948-07-16T05:00:00.000Z\",\r\n        \"albums\": [],\r\n        \"performerPrizes\": []\r\n    }\r\n]\r\n```"
			},
			"response": []
		},
		{
			"name": "Obtener un músico",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{ip}}/musicians/{{new_id_m}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"path": [
						"musicians",
						"{{new_id_m}}"
					]
				},
				"description": "Consulta un músico de la aplicación.  \r\n\r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el id del músico deseado por la URL de la petición.\r\n\r\n**Código http esperado: 200**\r\n\r\n**Ejemplo de respuesta**\r\n\r\n```\r\n{\r\n    \"id\": 1,\r\n    \"name\": \"Rubén Blades Bellido de Luna\",\r\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Ruben_Blades_by_Gage_Skidmore.jpg/800px-Ruben_Blades_by_Gage_Skidmore.jpg\",\r\n    \"description\": \"Es un cantante, compositor, músico, actor, abogado, político y activista panameño. Ha desarrollado gran parte de su carrera artística en la ciudad de Nueva York.\",\r\n    \"birthDate\": \"1948-07-16T05:00:00.000Z\",\r\n    \"albums\": [],\r\n    \"performerPrizes\": []\r\n}\r\n```"
			},
			"response": []
		},
		{
			"name": "Obtener un núsico que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se deberia obtener un músico con un id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"The musician with the given id was not found\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{ip}}/musicians/0",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"path": [
						"musicians",
						"0"
					]
				},
				"description": "Consulta un músico que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"The musician with the given id was not found\".\r\n\r\n**Código http esperado: 404**\r\n\r\n**JSON de salida**\r\n\r\n```\r\n{\r\n    \"statusCode\": 404,\r\n    \"message\": \"The musician with the given id was not found\"\r\n}\r\n```"
			},
			"response": []
		},
		{
			"name": "Editar un músico",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Rubén Blades Bellido de Luna\",\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Ruben_Blades_by_Gage_Skidmore.jpg/800px-Ruben_Blades_by_Gage_Skidmore.jpg\",\n    \"description\": \"Es un cantante, compositor, músico, actor, abogado, político y activista panameño.\",\n    \"birthDate\": \"1948-07-16T00:00:00-05:00\"\n}"
				},
				"url": {
					"raw": "{{protocol}}://{{ip}}/musicians/{{new_id_m}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"path": [
						"musicians",
						"{{new_id_m}}"
					]
				},
				"description": "Actualiza un músico existente. \r\n\r\nse envía el Id en la URL de la petición.\r\n\r\n**Código http esperado: 200**\r\n\r\n**JSON de salida**\r\n\r\n```\r\n{\r\n    \"id\": 13,\r\n    \"name\": \"Rubén Blades Bellido de Luna\",\r\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Ruben_Blades_by_Gage_Skidmore.jpg/800px-Ruben_Blades_by_Gage_Skidmore.jpg\",\r\n    \"description\": \"Es un cantante, compositor, músico, actor, abogado, político y activista panameño.\",\r\n    \"birthDate\": \"1948-07-16T00:00:00-05:00\"\r\n}\r\n```"
			},
			"response": []
		},
		{
			"name": "Editar un músico que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se deberia actualizar un músico con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"The musician with the given id was not found\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Rubén Blades Bellido de Luna\",\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Ruben_Blades_by_Gage_Skidmore.jpg/800px-Ruben_Blades_by_Gage_Skidmore.jpg\",\n    \"description\": \"Es un cantante, compositor, músico, actor, abogado, político y activista panameño.\",\n    \"birthDate\": \"1948-07-16T00:00:00-05:00\"\n}"
				},
				"url": {
					"raw": "{{protocol}}://{{ip}}/musicians/0",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"path": [
						"musicians",
						"0"
					]
				},
				"description": "Actualiza un músico que no existe. \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"The musician with the given id was not found\".\r\n\r\n**Código HTTP esperado: 404**\r\n\r\n**JSON de salida**\r\n\r\n```\r\n{\r\n    \"statusCode\": 404,\r\n    \"message\": \"The musician with the given id was not found\"\r\n}\r\n```"
			},
			"response": []
		},
		{
			"name": "Borrar un músico",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{ip}}/musicians/{{new_id_m}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"path": [
						"musicians",
						"{{new_id_m}}"
					]
				},
				"description": "Borra un músico. Se envía el id del músico creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar el músico 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{ip}}/musicians/{{new_id_m2}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"path": [
						"musicians",
						"{{new_id_m2}}"
					]
				},
				"description": "Borra un músico. Se envía el id del músico creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un músico que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se deberia borrar un músico con un id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"The musician with the given id was not found\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{ip}}/musicians/0",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"path": [
						"musicians",
						"0"
					]
				},
				"description": "Borra un músico que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"The musician with the given id was not found\".\r\n\r\n**Código http esperado: 404**\r\n\r\n**JSON de salida**\r\n\r\n```\r\n{\r\n    \"statusCode\": 404,\r\n    \"message\": \"The musician with the given id was not found\"\r\n}\r\n```"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}